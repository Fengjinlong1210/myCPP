层序遍历二叉树, 将每层都分开
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) 
    {
        if(!root) return {};
        vector<vector<int>> res;
        queue<TreeNode*> q;

        if(root)
        {
            q.push(root);
        }
        while(!q.empty())
        {
            int n = q.size();
            vector<int> tmp;

            for(int i = q.size(); i > 0; --i)
            {
                TreeNode* front = q.front();
                int val = front->val;
                q.pop();
                tmp.push_back(val);
                if(front->left)
                {
                    q.push(front->left);
                }
                if(front->right)
                {
                    q.push(front->right);
                }
            }
            res.push_back(tmp);
            //tmp.clear();
        }

        return res;
    }
};