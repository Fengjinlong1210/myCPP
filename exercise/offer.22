输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。

例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点

解法一:栈
class Solution {
public:
    ListNode* getKthFromEnd(ListNode* head, int k) 
    {
        stack<ListNode*> _st;
        while(head)
        {
            _st.push(head);
            head = head->next;
        }
        while(k > 1)
        {
            _st.pop();
            --k;
        }
        return _st.top();
    }
};

解法二:快慢指针
//快指针提前走k步, 然后和慢指针一起走, 快指针到最后时慢指针就是要返回的值
class Solution {
public:
    ListNode* getKthFromEnd(ListNode* head, int k) 
    {
        if(head == nullptr)
        {
            return nullptr;
        }
        ListNode* fast = head;
        ListNode* slow = head;

        while(k > 0 && fast)
        {
            fast = fast->next;
            --k;
        }
        while(fast)
        {
            fast = fast->next;
            slow = slow->next;
        }

        return slow;
    }
};